{"version":3,"sources":["assets/images/logo.png","containers/Layout/Layout.css.js","components/Navigation/Toolbar/Toolbar.css.js","components/Logo/Logo.css.js","components/Logo/Logo.js","utilis/breakpoints.js","components/Navigation/NavigationItems/NavigationItems.css.js","components/Navigation/NavigationItem/NavigationItem.css.js","components/Navigation/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.css.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Burger/Burger.css.js","components/Burger/BurgerIngredient/BurgerIngredient.css.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControls.css.js","components/Burger/BuildControls/BuildControl/BuildControl.css.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Spinner/Spinner.js","axios-orders.js","components/UI/Modal/Modal.css.js","components/UI/Modal/Modal.js","components/UI/Button/Button.css.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","hoc/withErrorHandler.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","store/actions/order.js","store/actions/auth.js","containers/BurgerBuilder/BurgerBuilder.js","index.css.js","components/Order/CheckoutSummary/CheckoutSummary.css.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.css.js","components/UI/Input/input.css.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","utilis/theme.js","components/Order/Order.css.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout.js","App.js","serviceWorker.js","store/reducers/burderBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","Main","styled","main","Header","header","Nav","nav","ToggleMenuBtn","div","LogoDiv","Logo","props","style","height","to","src","burgerLogo","alt","large","medium","small","Ul","ul","breakpoints","Li","li","NavigationItem","link","exact","children","NavigationItems","isAuth","Toolbar","onClick","click","className","SideDrawerStyle","Backdrop","active","SideDrawer","isOpened","backdropClick","connect","state","isAuthenticated","auth","token","useState","isSideDrawerOpen","setSideDrawerOpen","handleSideDrawer","BurgerStyle","breakPoints","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","BurgerIngredient","ingredient","type","propTypes","PropTypes","string","isRequired","Burger","ingredients","transformedIngredients","Object","keys","map","el","Array","_","i","key","reduce","prev","current","concat","length","padding","enable","keyframes","BuildPanel","OrderButton","button","BuildControlStyle","Label","ControlButton","BuildControl","label","removed","disabled","disabledRemove","added","disabledAdd","controls","BurgerControls","price","toFixed","ingredientAdded","ingredientRemoved","purchasable","orderButtonClicked","center","css","Spinner","color","instance","axios","create","baseURL","ModalStyled","React","memo","ReactDOM","createPortal","closeModal","Boolean","document","getElementById","next","loading","ButtonStyle","success","Button","clicked","OrderSummary","ingredientSummary","cancel","continue","withErrorHandler","WrappedComponent","error","setError","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","err","useEffect","eject","message","initIngredients","dispatch","get","then","setIngredients","data","catch","changeAuthPath","path","purchaseBurgerSuccess","orderData","authSuccess","idToken","userId","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","burgerBuilder","totalPrice","purchased","order","authPath","authRedirectPath","onIngredientAdded","name","ingredientName","burgerBuilderActions","onIngredientRemoved","onInitIngredients","onChangePurchased","resetIngredients","purchasing","setPurchasing","setPurchasable","handleCloseModal","handleContinuePurchase","a","history","push","pathname","disabledInfoRemove","disabledInfoAdd","sum","BuildControls","textAlign","marginTop","createGlobalStyle","normalize","CheckoutSummaryStyle","CheckoutSummary","checkoutCancelled","checkoutContinued","ContactDataStyle","DivWithInput","validate","Input","inputElement","elementType","elementConfig","value","onChange","changed","options","option","displayValue","element","override","onPurchase","post","contactDataActions","setLoading","formValidate","setformValidate","placeholder","isTouched","validation","required","minLength","street","zipCode","maxLength","country","email","delieveryMethod","orderForm","setOrderForm","formElementsArray","id","config","onSubmit","e","preventDefault","formData","event","inputId","updatedOrderForm","updatedFormElement","target","rules","isValid","trim","checkValidity","isFormValidate","inputChangedHandler","isPurchased","goBack","replace","match","url","component","ContactData","colors","gray","light","normal","dark","green","red","purple","OrderStyled","Order","orders","amount","ordersToShow","onFetchOrders","queryParams","ordersTemp","er","actions","ordersList","onAuth","password","isSignUp","authData","returnSecureToken","expirationDate","Date","getTime","expiresIn","setItem","localId","console","log","setIsSignUp","setControls","form","authRedirect","textTransform","transform","fontSize","fontWeight","fail","onLogout","autoLogin","getItem","TimeToExpiration","routes","BurgerBuilder","Auth","Checkout","Orders","Logout","theme","basename","window","location","hostname","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","action","reseted","rootReducer","burgerBuilderReducer","orderReducer","authReducer","store","createStore","combineReducers","composeWithDevTools","applyMiddleware","thunk","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ea01fd8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b8503d26.png\";","import styled from 'styled-components'\r\n\r\nexport const Main = styled.main`\r\n\r\nmin-height:100vh;\r\npadding-top:50px;\r\n\r\n\r\n\r\n`","import styled from 'styled-components'\r\n\r\n\r\nexport const Header = styled.header`\r\nheight:54px;\r\nwidth:100%;\r\nposition:fixed;\r\ntop:0;\r\nleft:0;\r\nbackground-color:brown;\r\ndisplay:flex;\r\njustify-content:space-between;\r\nalign-items:center;\r\npadding:0 20px;\r\nbox-sizing: border-box;\r\nz-index:90;\r\n`\r\nexport const Nav = styled.nav`\r\nheight:100%;\r\n\r\n@media(max-width:499px){\r\n    &.deskopOnly{\r\n        display:none;\r\n    }\r\n}\r\n`\r\n\r\nexport const ToggleMenuBtn = styled.div`\r\ncolor:white;\r\nfont-size:2rem;\r\n@media(min-width:500px){\r\n        display:none;\r\n}\r\n\r\n\r\n`\r\n","import styled from 'styled-components'\r\n\r\n\r\nexport const LogoDiv = styled.div`\r\nbackground-color:white;\r\npadding:8px;\r\nheight:80%;\r\nbox-sizing:border-box;\r\nborder-radius:10%;\r\ntext-align:center;\r\n\r\nimg{\r\n    height:100%;\r\n}\r\n`","import React from 'react';\r\nimport burgerLogo from 'assets/images/logo.png'\r\nimport { LogoDiv } from './Logo.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction Logo(props) {\r\n    return (\r\n        <LogoDiv style={{ height: props.height }}>\r\n            <Link to=\"/\">\r\n                <img src={burgerLogo} alt=\"burger logo\" />\r\n            </Link>\r\n        </LogoDiv>\r\n    );\r\n}\r\n\r\nexport default Logo;","export default {\r\n\r\n    height: {\r\n        large: 700,\r\n        medium: 401,\r\n        small: 400,\r\n    },\r\n    width: {\r\n        medium: 500,\r\n        large: 1000,\r\n    }\r\n\r\n}","import styled from 'styled-components'\r\nimport breakpoints from 'utilis/breakpoints'\r\n\r\nexport const Ul = styled.ul`\r\n    display:flex;\r\n    align-items: center;\r\n    margin:0;\r\n    flex-direction:column;\r\n    margin-top:20px;\r\n  \r\n@media(min-width:${breakpoints.width.medium}px){\r\n    margin-top:0;\r\n    flex-direction:row;\r\n    height:100%;\r\n}\r\n\r\n\r\n`","import styled from 'styled-components'\r\nimport breakpoints from 'utilis/breakpoints'\r\n\r\nexport const Li = styled.li`\r\n\r\nwidth:100%;\r\nheight:100%;\r\ndisplay:flex;\r\nalign-items:center;\r\nbackground-color:brown;\r\n\r\na{\r\n    background-color:white;\r\n    width:100%;\r\n    color:black;\r\n    height:100%;\r\n    padding: 16px 10px;\r\n    border-bottom:4px solid transparent;\r\n    display:flex;\r\n    align-items:center;\r\n    &:hover,\r\n    &:active,\r\n    &.active{\r\n        background-color: rgba(255, 255, 255, 0.4);\r\n        border-bottom:4px solid blue;\r\n\r\n    }\r\n}\r\n\r\n@media(min-width:${breakpoints.width.medium}px){\r\n    \r\n    width:auto;\r\n    \r\n    a{\r\n        background-color:transparent;\r\n        color:white;\r\n        \r\n    }\r\n}\r\n`","import React from 'react';\r\nimport { Li } from './NavigationItem.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction NavigationItem(props) {\r\n    return (\r\n        <Li><NavLink to={props.link} exact> {props.children}</NavLink></Li>\r\n    );\r\n}\r\n\r\nexport default NavigationItem;","import React from 'react';\r\nimport { Ul } from './NavigationItems.css'\r\nimport NavigationItem from '../NavigationItem/NavigationItem'\r\n\r\n\r\n\r\nfunction NavigationItems(props) {\r\n    return (\r\n        <Ul>\r\n            < NavigationItem link=\"/\" >\r\n                Burger Builder\r\n            </ NavigationItem >\r\n\r\n            {props.isAuth && < NavigationItem link=\"/orders\" >Orders</ NavigationItem >}\r\n\r\n            {props.isAuth ?\r\n                < NavigationItem link=\"/logout\" >Logout</ NavigationItem > :\r\n                < NavigationItem link=\"/auth\" >Sign in</ NavigationItem >\r\n            }\r\n\r\n\r\n        </Ul>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport { Header, Nav, ToggleMenuBtn } from './Toolbar.css'\r\nimport Logo from 'components/Logo/Logo'\r\nimport NavigationItems from 'components/Navigation/NavigationItems/NavigationItems'\r\n\r\n\r\nfunction Toolbar(props) {\r\n    return (\r\n        <Header>\r\n            <ToggleMenuBtn onClick={props.click}><i className=\"icon-menu\" /></ToggleMenuBtn>\r\n            <Logo />\r\n            <Nav className=\"deskopOnly\">\r\n                <NavigationItems isAuth={props.isAuth} />\r\n            </Nav>\r\n        </Header>\r\n    );\r\n}\r\n\r\nexport default Toolbar;","import styled from 'styled-components'\r\n\r\nexport const SideDrawerStyle = styled.div`\r\nposition:fixed;\r\nwidth:280px;\r\nmax-width:70%;\r\nheight:100%;\r\nleft:0;\r\ntop:0;\r\nz-index:200;\r\nbackground-color:white;\r\npadding:32px 16px;\r\ntransition:transform 0.3s ease-out;\r\n\r\n&.open{\r\n    transform:translateX(0);\r\n    }\r\n&.close{\r\n        transform:translateX(-100%);\r\n    }\r\n@media (min-width:500px){\r\n    display:none;\r\n}\r\n\r\n\r\n`","import styled from 'styled-components'\r\n\r\nconst Backdrop = styled.div`\r\nposition:fixed;\r\nbackground:rgba(53, 53, 53, 0.49);\r\nwidth:100%;\r\nheight:100%;\r\ntop:0;\r\nleft:0;\r\nz-index:100;\r\ndisplay: ${props => props.active ? 'block' : 'none'};\r\n`\r\nexport default Backdrop;","import React from 'react';\r\nimport Logo from 'components/Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport { SideDrawerStyle } from './SideDrawer.css.js'\r\nimport Backdrop from 'components/UI/Backdrop/Backdrop'\r\n\r\n\r\nfunction SideDrawer(props) {\r\n\r\n    return (\r\n        <>\r\n            <Backdrop active={props.isOpened} onClick={props.backdropClick} />\r\n            <SideDrawerStyle className={props.isOpened ? \"open\" : \"close\"}>\r\n                <Logo height=\"18%\" />\r\n                <nav>\r\n                    <NavigationItems isAuth={props.isAuth} />\r\n                </nav>\r\n            </SideDrawerStyle>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SideDrawer;","import React, { useState } from 'react';\r\nimport { Main } from './Layout.css';\r\nimport Toollbar from 'components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from 'components/Navigation/SideDrawer/SideDrawer';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Layout(props) {\r\n\r\n    const [isSideDrawerOpen, setSideDrawerOpen] = useState(false)\r\n\r\n    const handleSideDrawer = () => {\r\n        setSideDrawerOpen(!isSideDrawerOpen)\r\n    }\r\n    return (\r\n        <>\r\n            <Toollbar click={handleSideDrawer}\r\n                isAuth={props.isAuthenticated} />\r\n            <SideDrawer isOpened={isSideDrawerOpen} backdropClick={handleSideDrawer} isAuth={props.isAuthenticated} />\r\n            <Main>\r\n                {props.children}\r\n            </Main>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Layout);","import styled from 'styled-components'\r\nimport breakPoints from 'utilis/breakpoints'\r\n\r\nexport const BurgerStyle = styled.div`\r\n  width:90%;\r\n  margin:auto;\r\n  padding:15px;\r\n  height:250px;\r\n  text-align:center;\r\n  font-weight:bold;\r\n  font-size:1.2rem;\r\n  display:flex;\r\n  flex-direction:column;\r\n  justify-content:center;\r\n  overflow:auto;\r\n\r\n\r\n  @media (min-width:${breakPoints.width.medium}px)  { \r\n    width:350px;\r\n    height:300px;\r\n  }\r\n\r\n\r\n  @media (min-width:${breakPoints.width.medium}px) and (min-height:${breakPoints.height.medium}px)  { \r\n    width:450px;\r\n    height:400px;\r\n  }\r\n\r\n\r\n  @media (min-width: ${breakPoints.width.large}px) and (min-height:${breakPoints.height.large}px)  { \r\n    width:700px;\r\n    height:600px;\r\n  }\r\n\r\n`","import styled from 'styled-components'\r\n\r\nexport const BreadBottom = styled.div`\r\n  height: 13%;\r\n  width: 80%;\r\n  background: linear-gradient(#F08E4A, #e27b36);\r\n  border-radius: 0 0 30px 30px;\r\n  box-shadow: inset -15px 0 #c15711;\r\n  margin: 0 auto;\r\n`\r\n\r\nexport const BreadTop = styled.div`\r\n  height: 20%;\r\n  width: 80%;\r\n  background: linear-gradient(#bc581e, #e27b36);\r\n  border-radius: 50% 50% 0 0;\r\n  box-shadow: inset -15px 0 #c15711;\r\n  margin: 0 auto;\r\n  position: relative;\r\n`\r\n\r\nexport const Seeds1 = styled.div`\r\n  width: 10%;\r\n  height: 15%;\r\n  position: absolute;\r\n  background-color: white;\r\n  left: 30%;\r\n  top: 50%;\r\n  border-radius: 40%;\r\n  transform: rotate(-20deg);\r\n  box-shadow: inset -2px -3px #c9c9c9;\r\n  \r\n  &:after {\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    background-color: white;\r\n    left: -170%;\r\n    top: -260%;\r\n    border-radius: 40%;\r\n    transform: rotate(60deg);\r\n    box-shadow: inset -1px 2px #c9c9c9;\r\n  }\r\n\r\n  &:before {\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    background-color: white;\r\n    left: 180%;\r\n    top: -50%;\r\n    border-radius: 40%;\r\n    transform: rotate(60deg);\r\n    box-shadow: inset -1px -3px #c9c9c9;\r\n  }\r\n`\r\n\r\nexport const Seeds2 = styled.div`\r\n  width: 10%;\r\n  height: 15%;\r\n  position: absolute;\r\n  background-color: white;\r\n  left: 64%;\r\n  top: 50%;\r\n  border-radius: 40%;\r\n  transform: rotate(10deg);\r\n  box-shadow: inset -3px 0 #c9c9c9;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    background-color: white;\r\n    left: 150%;\r\n    top: -130%;\r\n    border-radius: 40%;\r\n    transform: rotate(90deg);\r\n    box-shadow: inset 1px 3px #c9c9c9;\r\n  }\r\n`\r\n\r\nexport const Meat = styled.div`\r\n  width: 80%;\r\n  height: 8%;\r\n  background: linear-gradient(#7f3608, #702e05);\r\n  margin: 0 auto;\r\n  border-radius: 15px;\r\n`\r\n\r\nexport const Cheese = styled.div`\r\n  width: 90%;\r\n  height: 4.5%;\r\n  margin: 0 auto;\r\n  background: linear-gradient(#f4d004, #d6bb22);\r\n  border-radius: 20px;\r\n`\r\n\r\nexport const Salad = styled.div`\r\n  width: 85%;\r\n  height: 7%;\r\n  margin: 0 auto;\r\n  background: linear-gradient(#228c1d, #91ce50);\r\n  border-radius: 20px;\r\n`\r\n\r\nexport const Bacon = styled.div`\r\n  width: 80%;\r\n  height: 3%;\r\n  background: linear-gradient(#bf3813, #c45e38);\r\n  margin: 0 auto;\r\n`\r\n\r\n","import React from 'react';\r\nimport { BreadBottom, BreadTop, Seeds1, Seeds2, Meat, Cheese, Salad, Bacon } from './BurgerIngredient.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction BurgerIngredient(props) {\r\n\r\n    let ingredient = null;\r\n\r\n    switch (props.type) {\r\n        case ('bread-bottom'):\r\n            ingredient = <BreadBottom />;\r\n            break;\r\n        case ('bread-top'):\r\n            ingredient = (\r\n                <BreadTop>\r\n                    <Seeds1 />\r\n                    <Seeds2 />\r\n                </BreadTop>\r\n            );\r\n            break;\r\n        case ('meat'):\r\n            ingredient = <Meat />\r\n            break;\r\n        case ('bacon'):\r\n            ingredient = <Bacon />\r\n            break;\r\n        case ('cheese'):\r\n            ingredient = <Cheese />\r\n            break;\r\n        case ('salad'):\r\n            ingredient = <Salad />\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n\r\n    return ingredient;\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport { BurgerStyle } from './Burger.css'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\r\n\r\nfunction Burger({ ingredients }) {\r\n\r\n    const transformedIngredients = Object.keys(ingredients)\r\n        .map(el => (\r\n            [...Array(ingredients[el])].map((_, i) => (\r\n                <BurgerIngredient key={el + i} type={el} />\r\n            ))\r\n        )).reduce((prev, current) => {\r\n            return prev.concat(current)\r\n        }, [])\r\n\r\n\r\n    return (\r\n\r\n        < BurgerStyle >\r\n\r\n            <BurgerIngredient type='bread-top' />\r\n            {transformedIngredients.length === 0 ? <p style={{ padding: '20px' }}>Please, start adding ingredients!</p> : transformedIngredients}\r\n            <BurgerIngredient type='bread-bottom' />\r\n        </BurgerStyle >\r\n    );\r\n}\r\n\r\nexport default Burger;","import styled, { keyframes } from 'styled-components'\r\n\r\nconst enable = keyframes`\r\n0% {\r\n    transform: scale(1);\r\n}\r\n60% {\r\n    transform: scale(1.1);\r\n}\r\n100% {\r\n    transform: scale(1);\r\n}\r\n\r\n`\r\n\r\nexport const BuildPanel = styled.div`\r\nwidth:100%;\r\nbackground-color:orange;\r\ndisplay:flex;\r\nflex-flow:column;\r\nalign-items:center;\r\nbox-shadow:0 2px 1px pink;\r\nmargin:auto;\r\npadding 15px 0;\r\n`\r\nexport const OrderButton = styled.button`\r\nbackground-color: #DAD735;\r\n    outline: none;\r\n    cursor: pointer;\r\n    border: 1px solid #966909;\r\n    color: #966909;\r\n    font-family: inherit;\r\n    font-size: 1.2em;\r\n    padding: 15px 30px;\r\n    box-shadow: 2px 2px 2px #966909;\r\n\r\n    &:hover, &:active {\r\n        background-color: #A0DB41;\r\n        border: 1px solid #966909;\r\n        color: #966909;\r\n    }\r\n\r\n    &:disabled {\r\n        background-color: #C7C6C6;\r\n        cursor: not-allowed;\r\n        border: 1px solid #ccc;\r\n        color: #888888;\r\n    }\r\n\r\n    &:not(:disabled) {\r\n        animation: ${enable} 0.3s linear;\r\n    }\r\n    \r\n\r\n\r\n\r\n`","import styled from 'styled-components'\r\n\r\nexport const BuildControlStyle = styled.div`\r\ndisplay:flex;\r\njustify-content:space-between;\r\nalign-items:center;\r\nmargin:5px 0;\r\n`\r\n\r\nexport const Label = styled.div`\r\npadding: 10px;\r\nfont-weight: bold;\r\nwidth: 80px;\r\n`\r\n\r\nexport const ControlButton = styled.button`\r\n\r\ndisplay:block;\r\nfont:inherit;\r\npadding:5px;\r\nmargin:0 5px;\r\nwidth:80px;\r\nborder:1px solid brown;\r\ncursor:pointer;\r\noutline:none;\r\ncolor: white;\r\n\r\nbackground-color:${props => props.type === 'less' ? '#D39952' : 'green'};\r\n\r\n&:hover, &:active {  \r\n    background-color:${props => props.type === 'less' ? 'red' : 'darkgreen'};\r\n}\r\n\r\n&:disabled {\r\n    background-color: #AC9980;\r\n    border: 1px solid #7E7365;\r\n    color: #ccc;\r\n    cursor: default;\r\n}\r\n&:hover:disabled {\r\n    background-color: #AC9980;\r\n    color: #ccc;\r\n    cursor: not-allowed;\r\n}\r\n`\r\n\r\n","import React from 'react';\r\nimport { ControlButton, BuildControlStyle, Label } from './BuildControl.css'\r\n\r\nfunction BuildControl(props) {\r\n    return (\r\n        <BuildControlStyle>\r\n            <Label>{props.label}</Label>\r\n            <ControlButton type=\"less\" onClick={props.removed} disabled={props.disabledRemove}>Less</ControlButton >\r\n            <ControlButton onClick={props.added} disabled={props.disabledAdd}>more</ControlButton >\r\n        </BuildControlStyle>\r\n    );\r\n}\r\n\r\nexport default BuildControl;","import React from 'react';\r\nimport { BuildPanel, OrderButton } from './BuildControls.css'\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\n\r\nfunction BurgerControls(props) {\r\n\r\n    // console.log()\r\n\r\n    return (\r\n        <BuildPanel>\r\n            <p>Price: <b>{props.price.toFixed(2)}</b></p>\r\n            {controls.map(el => (\r\n                <BuildControl\r\n                    key={el.label}\r\n                    label={el.label}\r\n                    added={() => props.ingredientAdded(el.type)}\r\n                    removed={() => props.ingredientRemoved(el.type)}\r\n                    disabledRemove={props.disabledRemove[el.type]}\r\n                    disabledAdd={props.disabledAdd[el.type]}\r\n                />\r\n\r\n            ))}\r\n\r\n            <OrderButton disabled={!props.purchasable} onClick={props.orderButtonClicked}>\r\n                {props.isAuth ? \"Order\" : \"Sing in to order\"}\r\n            </OrderButton>\r\n\r\n\r\n\r\n        </BuildPanel >\r\n    );\r\n}\r\n\r\nexport default BurgerControls;","import React from 'react';\r\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\r\nimport { css } from \"@emotion/core\";\r\n\r\nconst center = css`\r\n  left:45%;\r\n  top:50%;\r\n  transform:translate(-50%,-50%);\r\n  position:absolute;\r\n`;\r\nconst override = css`\r\n  left:40%;\r\n`;\r\n\r\n\r\nfunction Spinner(props) {\r\n    return (\r\n        <PacmanLoader\r\n            css={center}\r\n            color=\"black\" />\r\n    );\r\n}\r\n\r\nexport default Spinner;","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burger-app-2350a.firebaseio.com/'\r\n})\r\n\r\nexport default instance;","import styled from 'styled-components'\r\nexport const ModalStyled = styled.div`\r\nposition: fixed;\r\nz-index: 500;\r\nbackground-color: white;\r\nwidth: 70%;\r\nborder: 1px solid #ccc;\r\nbox-shadow: 1px 1px 1px black;\r\npadding:20px;\r\nleft: 15%;\r\ntop: 30%;\r\nbox-sizing: border-box;\r\ntransition: all 0.3s ease-out;\r\ntransform: ${props => props.active ? 'translateY(0)' : 'translateY(-100vh)'};\r\nopacity: ${props => props.active ? '1' : '0'};\r\n\r\n@media (min-width: 600px) {\r\n\r\n    width: 500px;\r\n    left: calc(50% - 250px);\r\n    padding: 60px;\r\n}\r\n\r\n\r\n\r\n`","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport { ModalStyled } from './Modal.css'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nfunction Modal(props) {\r\n\r\n\r\n    return ReactDOM.createPortal(\r\n        <>\r\n            <Backdrop active={props.active} onClick={props.closeModal} />\r\n            <ModalStyled active={Boolean(props.active)}>\r\n                {props.children}\r\n            </ModalStyled>\r\n        </>,\r\n        document.getElementById('modal')\r\n    );\r\n}\r\n\r\nexport default React.memo(Modal, (prev, next) =>\r\n    next.active === prev.active && next.loading === prev.loading\r\n);\r\n\r\n","import styled from 'styled-components';\r\nexport const ButtonStyle = styled.button`\r\n\r\n\r\nbackground-color: transparent;\r\n    border: none;\r\n    color: ${props => (props.success && !props.disabled) ? 'green' : 'red'};\r\n    transition:2s;\r\n    text-transform:uppercase;\r\n    background-color: ${props => props.disabled ? 'rgba(209, 209, 224,0.8)' : 'transparent'};\r\n    cursor:${props => props.disabled ? 'not-allowed' : 'pointer'};\r\n    outline: none;\r\n    background-color:#e1e4e8;\r\n    font: inherit;\r\n    padding: 10px;\r\n    margin: 10px;\r\n    margin-top:20px;\r\n    font-weight: bold;\r\n    \r\n`","import React from 'react';\r\nimport { ButtonStyle } from './Button.css'\r\nfunction Button(props) {\r\n    return (\r\n        <ButtonStyle success={props.success} onClick={props.clicked} disabled={props.disabled}>\r\n            {props.children}\r\n        </ButtonStyle>\r\n    );\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from '../../UI/Button/Button'\r\n\r\n\r\nfunction OrderSummary(props) {\r\n    const ingredientSummary = Object.keys(props.ingredients).map(el => (\r\n        <li key={el}>{el}: {props.ingredients[el]}</li>\r\n    ))\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>Your Burger</h3>\r\n            <p>the best burger</p>\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <b>Total price: {props.price} </b>\r\n            <p>continue to checkout?</p>\r\n            <Button clicked={props.cancel}>cancel</Button>\r\n            <Button success clicked={props.continue} >continue</Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OrderSummary;","import React, { useState, useEffect } from 'react';\r\n\r\nimport Modal from 'components/UI/Modal/Modal';\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return props => {\r\n        const [error, setError] = useState(false)\r\n\r\n        const reqInterceptor = axios.interceptors.request.use(req => {\r\n            setError(false);\r\n            return req;\r\n        });\r\n        const resInterceptor = axios.interceptors.response.use(res => res, err => {\r\n            setError(err);\r\n        });\r\n\r\n\r\n        useEffect(() => {\r\n            return () => {\r\n                axios.interceptors.request.eject(reqInterceptor);\r\n                axios.interceptors.response.eject(resInterceptor);\r\n            };\r\n        }, [reqInterceptor, resInterceptor]);\r\n\r\n        const errorConfirmedHandler = () => {\r\n            setError(false)\r\n        }\r\n\r\n\r\n        return (\r\n            <>\r\n                <Modal\r\n                    active={error}\r\n                    closeModal={errorConfirmedHandler}>\r\n                    {error ? error.message : null}\r\n                </Modal>\r\n                <WrappedComponent {...props} />\r\n            </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;\r\n\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios-orders';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\nconst setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\nexport const resetIngredients = () => {\r\n    return {\r\n        type: actionTypes.RESET_INGREDIENTS\r\n    }\r\n}\r\n\r\nexport const initIngredients = (ingredients) => {\r\n    return dispatch => {\r\n        if (!ingredients) {\r\n            axios.get('https://burger-app-2350a.firebaseio.com/ingredients.json')\r\n                .then(res => {\r\n                    dispatch(setIngredients(res.data))\r\n                })\r\n                .catch(err => dispatch(fetchIngredientsFailed()))\r\n        }\r\n        else return;\r\n    }\r\n}\r\nexport const changeAuthPath = (path) => {\r\n    return {\r\n        type: actionTypes.CHANGE_AUTH_PATH,\r\n        path\r\n    }\r\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\nexport const RESET_INGREDIENTS = 'RESET_INGREDIENTS'\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const CHANGE_PURCHASED = 'CHANGE_PURCHASED';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const CHANGE_AUTH_PATH = 'CHANGE_AUTH_PATH';","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios-orders'\r\n\r\n\r\nexport const purchaseBurgerSuccess = (orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        data: orderData\r\n    }\r\n}\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\nexport const changePurchased = () => {\r\n    return {\r\n        type: actionTypes.CHANGE_PURCHASED\r\n    }\r\n}\r\n\r\n\r\nexport const sendPurchase = (orderData, token) => {\r\n    return async dispatch => {\r\n\r\n        const response = await axios.post('/orders.json?auth=' + token, orderData)\r\n        try {\r\n            dispatch(purchaseBurgerSuccess(response));\r\n            dispatch(changePurchased());\r\n        }\r\n        catch (err) { dispatch(purchaseBurgerFail(err)); }\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders\r\n    }\r\n}\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error\r\n    }\r\n}\r\nexport const fetchOrdersStart = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START,\r\n\r\n    }\r\n}\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n        axios.get('orders.json' + queryParams)\r\n            .then(res => {\r\n                const ordersTemp = [];\r\n                for (const key in res.data) {\r\n                    ordersTemp.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSuccess(ordersTemp));\r\n            })\r\n            .catch(er => {\r\n                dispatch(fetchOrdersFail(er))\r\n            })\r\n    }\r\n}","import * as actionsTypes from './actionTypes';\r\nimport axios from 'axios'\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionsTypes.AUTH_START\r\n    };\r\n}\r\nexport const authSuccess = (idToken, userId) => {\r\n    return {\r\n        type: actionsTypes.AUTH_SUCCESS,\r\n        idToken,\r\n        userId\r\n    };\r\n}\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionsTypes.AUTH_FAIL,\r\n        error\r\n    };\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('expirationDate')\r\n    return {\r\n        type: actionsTypes.AUTH_LOGOUT\r\n    }\r\n}\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    }\r\n}\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        }\r\n        let link = isSignUp ?\r\n            'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCwGcPDw4T3liIhsHsaPktW7cCAV_x6J-Y' :\r\n            'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCwGcPDw4T3liIhsHsaPktW7cCAV_x6J-Y';\r\n\r\n\r\n        axios.post(link, authData)\r\n            .then(res => {\r\n                const expirationDate = new Date(new Date().getTime() + res.data.expiresIn * 1000);\r\n                localStorage.setItem('token', res.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', res.data.localId);\r\n                dispatch(authSuccess(res.data.idToken, res.data.localId));\r\n                dispatch(checkAuthTimeout(res.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                dispatch(authFail(err.response.data.error))\r\n            })\r\n    };\r\n}\r\n\r\nexport const checkLogin = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) dispatch(logout());\r\n        else {\r\n            const expirationDate = localStorage.getItem('expirationDate');\r\n            const userId = localStorage.getItem('userId');\r\n            const TimeToExpiration = (new Date(expirationDate).getTime() - new Date().getTime()) / 1000;\r\n            dispatch(authSuccess(token, userId));\r\n            dispatch(checkAuthTimeout(TimeToExpiration));\r\n\r\n        }\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport Burger from 'components/Burger/Burger'\r\nimport BuildControls from 'components/Burger/BuildControls/BuildControls'\r\nimport Spinner from 'components/UI/Spinner/Spinner'\r\nimport axios from 'axios-orders'\r\nimport Modal from 'components/UI/Modal/Modal';\r\nimport OrderSummary from 'components/Burger/OrderSummary/OrderSummary'\r\nimport { connect } from 'react-redux'\r\nimport withErrorHandler from 'hoc/withErrorHandler'\r\nimport * as burgerBuilderActions from 'store/actions'\r\n\r\n\r\n\r\nfunction BurgerBuilder(props) {\r\n\r\n    const [purchasing, setPurchasing] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [purchasable, setPurchasable] = useState(false);\r\n\r\n    const handleCloseModal = () => {\r\n        setPurchasing(false);\r\n    }\r\n\r\n    const handleContinuePurchase = async () => {\r\n        // const queryParams = [];\r\n\r\n        // for (let i in props.ingredients) {\r\n        //     queryParams.push(`${encodeURIComponent(i)}=${encodeURIComponent(props.ingredients[i])}`)\r\n        // }\r\n        // queryParams.push(`price=${props.totalPrice}`)\r\n        // const queryString = queryParams.join('&');\r\n        props.history.push({\r\n            pathname: '/checkout',\r\n            // search: '?' + queryString\r\n        });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        props.onInitIngredients(props.ingredients);\r\n        props.changeAuthPath('/');\r\n        if (props.purchased) {\r\n            props.resetIngredients()\r\n            props.onChangePurchased();\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    const disabledInfoRemove = {\r\n        ...props.ingredients\r\n    };\r\n    const disabledInfoAdd = {\r\n        ...props.ingredients\r\n    };\r\n    for (let key in disabledInfoRemove) {\r\n        disabledInfoRemove[key] = disabledInfoRemove[key] <= 0;\r\n        disabledInfoAdd[key] = disabledInfoAdd[key] >= 3;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.ingredients) {\r\n            const sum = Object.keys(props.ingredients).map(el => (\r\n                props.ingredients[el]\r\n            )).reduce((sum, el) => sum + el, 0)\r\n            setPurchasable(sum > 0)\r\n        }\r\n    }, [props.ingredients])\r\n\r\n    const handleOrderButton = () => {\r\n        if (props.isAuth) setPurchasing(true);\r\n        else {\r\n            props.history.push('/auth');\r\n            props.changeAuthPath('/checkout');\r\n\r\n        };\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.ingredients ? (\r\n                <>\r\n                    <Burger ingredients={props.ingredients} />\r\n                    <BuildControls\r\n                        ingredientAdded={props.onIngredientAdded}\r\n                        ingredientRemoved={props.onIngredientRemoved}\r\n                        disabledRemove={disabledInfoRemove}\r\n                        disabledAdd={disabledInfoAdd}\r\n                        purchasable={purchasable}\r\n                        price={props.totalPrice}\r\n                        ingredients={props.ingredients}\r\n                        isAuth={props.isAuth}\r\n                        orderButtonClicked={handleOrderButton}\r\n                    />\r\n                    <Modal active={purchasing} loading={loading} closeModal={handleCloseModal}>\r\n                        {loading ?\r\n                            <Spinner /> :\r\n                            (<OrderSummary\r\n                                ingredients={props.ingredients}\r\n                                continue={handleContinuePurchase}\r\n                                cancel={handleCloseModal}\r\n                                price={props.totalPrice.toFixed(2)}\r\n                            />)\r\n                        }\r\n\r\n                    </Modal>\r\n\r\n                </>\r\n            ) : props.error ? <p style={{ textAlign: 'center', marginTop: '150px' }}>Connecting error</p> : <Spinner />}\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        purchased: state.order.purchased,\r\n        isAuth: state.auth.token !== null,\r\n        authPath: state.auth.authRedirectPath\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (name) => dispatch(burgerBuilderActions.addIngredient(name)),\r\n        onIngredientRemoved: (name) => dispatch(burgerBuilderActions.removeIngredient(name)),\r\n        onInitIngredients: (ingredients) => dispatch(burgerBuilderActions.initIngredients(ingredients)),\r\n        onChangePurchased: () => dispatch(burgerBuilderActions.changePurchased()),\r\n        resetIngredients: () => dispatch(burgerBuilderActions.resetIngredients()),\r\n        changeAuthPath: (path) => dispatch(burgerBuilderActions.changeAuthPath(path))\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import { createGlobalStyle } from 'styled-components'\r\nimport { normalize } from 'styled-normalize'\r\n\r\n\r\nexport default createGlobalStyle`\r\n${normalize}\r\n*{\r\n    padding:0;\r\n    margin:0;\r\n    box-sizing:border-box;\r\n    text-align:center;\r\n}\r\n\r\n\r\n\r\n a{\r\n     text-decoration:none\r\n }\r\n ul{\r\n    list-style-type:none;\r\n }\r\n`","import styled from 'styled-components'\r\n\r\nexport const CheckoutSummaryStyle = styled.div`\r\nh1{\r\n    margin-bottom:0;\r\n}\r\ntext-align:center;\r\nmargin-top:80px;\r\n\r\n@media(min-width:600px){\r\n   \r\n}\r\n`","import React from 'react';\r\nimport Burger from 'components/Burger/Burger'\r\nimport Button from 'components/UI/Button/Button'\r\n\r\nimport { CheckoutSummaryStyle } from './CheckoutSummary.css'\r\n\r\nfunction CheckoutSummary(props) {\r\n    return (\r\n        <CheckoutSummaryStyle>\r\n            <h1>We hope you will happy</h1>\r\n\r\n            {props.ingredients && <Burger ingredients={props.ingredients} />}\r\n\r\n            <Button clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button success clicked={props.checkoutContinued}>Continue</Button>\r\n        </CheckoutSummaryStyle>\r\n    );\r\n}\r\n\r\nexport default CheckoutSummary;","import styled from 'styled-components'\r\n\r\nexport const ContactDataStyle = styled.div`\r\ntext-align:center;\r\nfont-size:1.8rem;\r\ninput{\r\n    text-align:center;\r\n\r\n    display:block;\r\n    margin:10px auto;\r\n}\r\n\r\n\r\n\r\n`","import styled from 'styled-components';\r\n\r\nexport const DivWithInput = styled.div`\r\nwidth:100%;\r\ntext-align:center;\r\n\r\n\r\nlabel{\r\n    font-weight:bold;\r\n    display:block;\r\n    margin-bottom:8px;\r\n}\r\ninput{\r\n    outline:none;\r\n    border:none;\r\n    border-bottom: 1px solid gray;\r\n    background-color:${props => props.validate ? 'white' : 'red'};\r\n    transition:.3s;\r\n    padding: 5px;\r\n    font-size:1.4rem;\r\n    width: 80%;\r\n    text-align:center;\r\n    max-width: 600px;\r\n    margin:3px;\r\n  \r\n    \r\n    &:focus{\r\n        background-color:#e1e4e8;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n`","import React from 'react';\r\nimport { DivWithInput } from './input.css'\r\nfunction Input(props) {\r\n    let inputElement = null;\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input {...props.elementConfig} value={props.value} onChange={props.changed} />\r\n\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea {...props.elementConfig} value={props.value} onChange={props.changed} />\r\n            break;\r\n        case ('select'):\r\n            inputElement = <select value={props.value} onChange={props.changed}>\r\n                {props.elementConfig.options.map(option => (\r\n                    <option value={option.value} key={option.value}>{option.displayValue}</option>\r\n                ))}\r\n\r\n            </select>\r\n            break;\r\n        default:\r\n            inputElement = <input {...props.elementConfig} value={props.element} onChange={props.changed} />\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <DivWithInput validate={props.validate}>\r\n            <label>{props.label}</label>\r\n            {inputElement}\r\n        </DivWithInput>\r\n    );\r\n}\r\n\r\nexport default Input;","import React, { useState } from 'react';\r\nimport Button from 'components/UI/Button/Button'\r\nimport { ContactDataStyle } from './ContactData.css'\r\nimport PacmanLoader from \"react-spinners/PacmanLoader\";\r\n\r\nimport { css } from \"@emotion/core\";\r\nimport Input from 'components/UI/Input/Input';\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as contactDataActions from 'store/actions'\r\nconst override = css`\r\ntransform:translateX(-50px);\r\n  margin:50px auto;\r\n`;\r\n\r\nfunction ContactData(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [formValidate, setformValidate] = useState(false);\r\n    const [orderForm, setOrderForm] = useState({\r\n        name: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'Your Name'\r\n            },\r\n            value: '',\r\n            validate: true,\r\n            isTouched: false,\r\n            validation: {\r\n                required: true,\r\n                minLength: 3\r\n            }\r\n        },\r\n        street: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'street'\r\n            },\r\n            value: '',\r\n            validate: true,\r\n            isTouched: false,\r\n            validation: {\r\n                required: true,\r\n\r\n            }\r\n        },\r\n        zipCode: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'zip code'\r\n            },\r\n            value: '',\r\n            validate: true,\r\n            isTouched: false,\r\n            validation: {\r\n                required: true,\r\n                minLength: 5,\r\n                maxLength: 6\r\n            }\r\n        },\r\n        country: {\r\n            elementType: 'input',\r\n\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'country'\r\n            },\r\n            value: '',\r\n            validate: true,\r\n            isTouched: false,\r\n            validation: {\r\n                required: true,\r\n\r\n            }\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'text',\r\n                placeholder: 'email'\r\n            },\r\n            value: '',\r\n            validate: true,\r\n            isTouched: false,\r\n            validation: {\r\n                required: true,\r\n\r\n            }\r\n        },\r\n        delieveryMethod: {\r\n            elementType: 'select',\r\n            elementConfig: {\r\n\r\n                options: [\r\n                    { value: 'fastest', displayValue: 'Fastest' },\r\n                    { value: 'cheapest', displayValue: 'cheapest' }\r\n                ]\r\n            },\r\n            value: 'fastest',\r\n            validate: true,\r\n            isTouched: true,\r\n        }\r\n\r\n\r\n    })\r\n\r\n    const checkValidity = (value, rules) => {\r\n        if (!rules) return true;\r\n        let isValid = true;\r\n        if (rules.required && value.trim() === '') isValid = false;\r\n        if (rules.minLength && value.length < rules.minLength) isValid = false;\r\n        if (rules.maxLength && value.length > rules.maxLength) isValid = false;\r\n\r\n\r\n\r\n        return isValid;\r\n    }\r\n    const handleOrder = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = {};\r\n\r\n        for (let key in orderForm) {\r\n            formData[key] = orderForm[key].value\r\n        }\r\n        const order = {\r\n            ingredients: props.ingredients,\r\n            price: props.totalPrice.toFixed(2),\r\n            orderData: formData,\r\n            userId: props.userId\r\n        }\r\n\r\n\r\n        props.onPurchase(order, props.token);\r\n\r\n\r\n    }\r\n\r\n\r\n    const formElementsArray = [];\r\n    for (let key in orderForm) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: orderForm[key],\r\n\r\n        })\r\n    }\r\n\r\n    const inputChangedHandler = (event, inputId) => {\r\n\r\n        const updatedOrderForm = {\r\n            ...orderForm\r\n        }\r\n        const updatedFormElement = { ...updatedOrderForm[inputId] };\r\n        updatedFormElement.value = event.target.value;\r\n        if (!updatedFormElement.isTouched) updatedFormElement.isTouched = true;\r\n        updatedFormElement.validate = checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n        updatedOrderForm[inputId] = updatedFormElement;\r\n\r\n\r\n        setOrderForm(updatedOrderForm)\r\n\r\n        let isFormValidate = true;\r\n        for (let key in updatedOrderForm) {\r\n            if (!(updatedOrderForm[key].isTouched && updatedOrderForm[key].validate)) {\r\n                isFormValidate = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        setformValidate(isFormValidate)\r\n    }\r\n\r\n    return (\r\n        <ContactDataStyle>\r\n            <h3>Enter your contact data</h3>\r\n            {loading ?\r\n                <PacmanLoader css={override} />\r\n                : (<form onSubmit={handleOrder}>\r\n\r\n                    {formElementsArray.map(el => <Input\r\n                        key={el.id}\r\n                        elementType={el.config.elementType}\r\n                        elementConfig={el.config.elementConfig}\r\n                        value={el.config.value}\r\n                        validate={el.config.validate}\r\n                        changed={(event) => inputChangedHandler(event, el.id)}\r\n                    />)}\r\n\r\n                    <Button success disabled={!formValidate}>Order</Button>\r\n                </form>)}\r\n\r\n        </ContactDataStyle>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onPurchase: (orderData, token) => dispatch(contactDataActions.sendPurchase(orderData, token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactData);","import React from 'react';\r\nimport CheckoutSummary from 'components/Order/CheckoutSummary/CheckoutSummary'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport ContactData from './ContactData/ContactData'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nfunction Checkout(props) {\r\n    // const [ingredients, setIngredients] = useState(null);\r\n    // const [price, setPrice] = useState(0);\r\n    // const location = useRef(props.location);\r\n\r\n    // useEffect(() => {\r\n    //     const query = new URLSearchParams(location.current.search);\r\n    //     const ingredientsTemp = {};\r\n    //     for (let param of query.entries()) {\r\n    //         if (param[0] === 'price') setPrice(+param[1])\r\n    //         else ingredientsTemp[param[0]] = +param[1];\r\n    //     }\r\n    //     setIngredients(ingredientsTemp);\r\n    // }, [])\r\n\r\n\r\n    const handleCheckoutCancelled = () => {\r\n        props.history.goBack();\r\n    }\r\n    const HandleCheckoutContinued = () => {\r\n        props.history.replace('/checkout/contact-data')\r\n    }\r\n    return (\r\n        <div>\r\n            {(props.isPurchased || !props.ingredients) ? <Redirect to=\"/\" /> : null}\r\n            <CheckoutSummary ingredients={props.ingredients}\r\n                checkoutCancelled={handleCheckoutCancelled}\r\n                checkoutContinued={HandleCheckoutContinued}\r\n            />\r\n            <Route path={props.match.url + '/contact-data'} component={ContactData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        isPurchased: state.order.purchased\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","export default {\r\n\r\n    colors: {\r\n        gray: {\r\n            light: \"rgba(204, 204, 204, 1)\",\r\n            normal: \"rgba(156, 156, 156, 1)\",\r\n            dark: \"rgba(92, 92, 92, 1)\"\r\n        },\r\n        green: {\r\n            normal: \"rgba(23, 117, 10, 1)\",\r\n        },\r\n        red: {\r\n            normal: \"rgba(238, 58, 58, 1)\",\r\n        },\r\n        purple: {\r\n            normal: \"rgba(184, 58, 238, 1)\",\r\n        }\r\n    }\r\n}","import styled from 'styled-components'\r\n\r\n\r\nexport const OrderStyled = styled.div`\r\nwidth:100%;\r\npadding:20px;\r\nborder-bottom:1px solid black;\r\ntext-align:center;\r\n\r\n`","import React from 'react';\r\nimport { OrderStyled } from './Order.css'\r\n\r\nfunction Order(props) {\r\n\r\n    const orders = [];\r\n    for (const key in props.ingredients) {\r\n        orders.push({\r\n            name: key,\r\n            amount: props.ingredients[key]\r\n        })\r\n    }\r\n\r\n    const ordersToShow = orders.map(el => <span key={el.name}>{el.name}: {el.amount} </span>)\r\n\r\n\r\n    return (\r\n        <OrderStyled>\r\n            <p>Ingredients: {ordersToShow}</p>\r\n            <p>Price: USD {props.price}</p>\r\n        </OrderStyled>\r\n    );\r\n}\r\n\r\nexport default Order;\r\n\r\n","import React, { useEffect } from 'react';\r\nimport axios from 'axios-orders';\r\nimport Order from 'components/Order/Order';\r\nimport Spinner from 'components/UI/Spinner/Spinner';\r\nimport withErrorHandler from 'hoc/withErrorHandler';\r\nimport * as actions from 'store/actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction Orders(props) {\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        props.onFetchOrders(props.token, props.userId);\r\n    }, []);\r\n\r\n    let ordersList = <h3 style={{ marginTop: '50px' }}>No orders</h3>\r\n\r\n    if (props.orders.length !== 0) {\r\n        ordersList = props.orders.map(el => <Order key={el.id} price={el.price} ingredients={el.ingredients} />);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.loading ? <Spinner /> : ordersList}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { useState } from 'react';\r\nimport Input from 'components/UI/Input/Input';\r\nimport Button from 'components/UI/Button/Button'\r\nimport * as actions from 'store/actions';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from 'components/UI/Spinner/Spinner';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction Auth(props) {\r\n    const [isSignUp, setIsSignUp] = useState(false);\r\n    const [controls, setControls] = useState({\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                type: 'email',\r\n                placeholder: 'Mail adress'\r\n            },\r\n            value: '',\r\n            validate: true,\r\n            isTouched: false,\r\n            validation: {\r\n                required: true,\r\n                minLength: 3\r\n            }\r\n        },\r\n        password: {\r\n            elementType: 'password',\r\n            elementConfig: {\r\n                type: 'password',\r\n                placeholder: 'password'\r\n            },\r\n            value: '',\r\n            validate: true,\r\n            isTouched: false,\r\n            validation: {\r\n                required: true,\r\n                minLength: 6\r\n            }\r\n        },\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        props.onAuth(controls.email.value, controls.password.value, isSignUp);\r\n\r\n    }\r\n    const checkValidity = (value, rules) => {\r\n        if (!rules) return true;\r\n        let isValid = true;\r\n        if (rules.required && value.trim() === '') isValid = false;\r\n        if (rules.minLength && value.length < rules.minLength) isValid = false;\r\n        if (rules.maxLength && value.length > rules.maxLength) isValid = false;\r\n\r\n        return isValid;\r\n    }\r\n\r\n    const inputChangedHandler = (event, inputId) => {\r\n\r\n        const updatedOrderForm = {\r\n            ...controls\r\n        }\r\n        const updatedFormElement = { ...updatedOrderForm[inputId] };\r\n        updatedFormElement.value = event.target.value;\r\n        if (!updatedFormElement.isTouched) updatedFormElement.isTouched = true;\r\n        updatedFormElement.validate = checkValidity(updatedFormElement.value, updatedFormElement.validation)\r\n        updatedOrderForm[inputId] = updatedFormElement;\r\n\r\n        setControls(updatedOrderForm)\r\n\r\n        for (let key in updatedOrderForm) {\r\n            if (!(updatedOrderForm[key].isTouched && updatedOrderForm[key].validate)) {\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const formElementsArray = [];\r\n    for (let key in controls) {\r\n        formElementsArray.push({\r\n            id: key,\r\n            config: controls[key],\r\n\r\n        })\r\n    }\r\n\r\n    const form = formElementsArray.map(el => <Input\r\n        key={el.id}\r\n        elementType={el.config.elementType}\r\n        elementConfig={el.config.elementConfig}\r\n        value={el.config.value}\r\n        validate={el.config.validate}\r\n        changed={(event) => inputChangedHandler(event, el.id)}\r\n\r\n    />);\r\n\r\n\r\n    let authRedirect = null;\r\n    if (props.isAuth) {\r\n        authRedirect = <Redirect to={props.authPath} />\r\n    }\r\n\r\n    const spanStyle = {\r\n        textTransform: 'uppercase',\r\n        transform: 'translateY(-25px)',\r\n        fontSize: '25px',\r\n        fontWeight: '700'\r\n    }\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center', marginTop: '100px' }}>\r\n            {authRedirect}\r\n            {props.error ? <p>{props.error.message}</p> : null}\r\n            {props.loading ?\r\n                <Spinner /> :\r\n                <>\r\n                    <h2 style={spanStyle}> {!isSignUp ? 'sign in' : 'sign up'}</h2>\r\n                    <form onSubmit={handleSubmit}>\r\n                        {form}\r\n                        <Button success>Submit</Button>\r\n                    </form>\r\n                    <Button fail clicked={() => setIsSignUp(!isSignUp)}>switch to {isSignUp ? 'sign in' : 'sign up'}</Button>\r\n                </>\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuth: state.auth.token !== null,\r\n        authPath: state.burgerBuilder.authRedirectPath\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp)),\r\n        changeAuthPath: () => dispatch(actions.changeAuthPath('/'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from 'store/actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\nfunction Logout(props) {\r\n\r\n    useEffect(() => {\r\n        props.onLogout();\r\n        props.setIngredients();\r\n        props.changeAuthPath('/');\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Redirect to=\"/\" />\r\n    );\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout()),\r\n        changeAuthPath: (path) => dispatch(actions.changeAuthPath(path)),\r\n        setIngredients: () => dispatch(actions.initIngredients())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { useEffect } from 'react';\r\nimport Layout from 'containers/Layout/Layout.js';\r\nimport BurgerBuilder from 'containers/BurgerBuilder/BurgerBuilder';\r\nimport { ThemeProvider } from 'styled-components'\r\nimport GlobalStyles from 'index.css';\r\nimport \"./fontello/css/fontello.css\";\r\nimport Checkout from 'containers/Checkout/Checkout';\r\nimport theme from 'utilis/theme';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Orders from 'containers/Orders/Orders';\r\nimport Auth from 'containers/Auth/Auth';\r\nimport Logout from 'containers/Auth/Logout';\r\nimport { connect } from 'react-redux';\r\nimport * as autoLoginAction from 'store/actions'\r\n\r\nfunction App(props) {\r\n\r\n  useEffect(() => {\r\n    props.autoLogin();\r\n  }, [])\r\n\r\n  let routes = (\r\n    <Switch>\r\n      <Route path=\"/\" exact component={BurgerBuilder} />\r\n      <Route path=\"/auth\" component={Auth} />\r\n      <Redirect to=\"/\" />\r\n\r\n    </Switch>\r\n  );\r\n\r\n  if (props.isAuthenticated) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={BurgerBuilder} />\r\n        <Route path=\"/checkout\" component={Checkout} />\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/orders\" component={Orders} />\r\n        <Route path=\"/logout\" component={Logout} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <BrowserRouter basename='/Burger-app'>\r\n        <GlobalStyles />\r\n        <Layout>\r\n          {routes}\r\n        </Layout>\r\n      </BrowserRouter>\r\n    </ThemeProvider>\r\n  );\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    autoLogin: () => dispatch(autoLoginAction.checkLogin())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as actions from '../actions/actionTypes';\r\n\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    authRedirectPath: \"/\",\r\n    totalPrice: 4,\r\n    error: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 1\r\n\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actions.ADD_INGREDIENT:\r\n\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n        case actions.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n        case actions.SET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    salad: action.ingredients.salad,\r\n                    bacon: action.ingredients.bacon,\r\n                    cheese: action.ingredients.cheese,\r\n                    meat: action.ingredients.meat,\r\n                },\r\n                error: false,\r\n                totalPrice: initialState.totalPrice\r\n            }\r\n        case actions.FETCH_INGREDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        case actions.RESET_INGREDIENTS:\r\n            let reseted = { ...state.ingredients };\r\n\r\n            for (let key in reseted) {\r\n                reseted[key] = 0;\r\n            }\r\n            return {\r\n                ...initialState,\r\n                ingredients: reseted\r\n            }\r\n        case actions.CHANGE_AUTH_PATH:\r\n            return {\r\n                ...state,\r\n                authRedirectPath: action.path\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer\r\n\r\n","import * as actionTypes from 'store/actions/actionTypes';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    error: false,\r\n    purchased: false,\r\n    loading: false\r\n}\r\n\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                order: action.orderData,\r\n                error: false\r\n            }\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        case actionTypes.CHANGE_PURCHASED:\r\n            return {\r\n                ...state,\r\n                purchased: !state.purchased\r\n            }\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                orders: action.orders\r\n            }\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                token: action.idToken,\r\n                userId: action.userId\r\n            }\r\n        case actionTypes.AUTH_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false\r\n            }\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                userId: null\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport burgerBuilderReducer from './store/reducers/burderBuilder';\r\nimport orderReducer from './store/reducers/order';\r\nimport authReducer from './store/reducers/auth';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk'\r\n\r\nconst rootReducer = {\r\n  burgerBuilder: burgerBuilderReducer,\r\n  order: orderReducer,\r\n  auth: authReducer\r\n}\r\n\r\nconst store = createStore(combineReducers(rootReducer), composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n\r\n    <App />\r\n\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}